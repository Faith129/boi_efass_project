{"version":3,"sources":["webpack:///src/app/pages/generate-report/generate-report-data/generate-report-edit/normal-reports/sheet321/sheet321.service.ts","webpack:///src/app/pages/generate-report/generate-report-data/generate-report-edit/normal-reports/sheet321/sheet321.component.ts","webpack:///src/app/pages/generate-report/generate-report-data/generate-report-edit/normal-reports/sheet321/sheet321.component.html","webpack:///src/app/pages/generate-report/generate-report-data/generate-report-edit/normal-reports/sheet321/confirmation-dialog/confirmation-dialog.component.ts","webpack:///src/app/pages/generate-report/generate-report-data/generate-report-edit/normal-reports/sheet321/confirmation-dialog/confirmation-dialog.component.html","webpack:///src/app/pages/generate-report/generate-report-data/generate-report-edit/normal-reports/sheet321/dialog/dialog.component.ts","webpack:///src/app/pages/generate-report/generate-report-data/generate-report-edit/normal-reports/sheet321/dialog/dialog.component.html","webpack:///src/app/pages/generate-report/generate-report-data/generate-report-edit/normal-reports/sheet321/sheet321.module.ts"],"names":["Sheet321Service","http","reportService","sheetName","selectedDate","subscribe","date","reportSelectedDate","data","post","baseApi","get","id","console","log","put","providedIn","Sheet321Component","dialog","sheet321Service","notifierService","displayedColumns","getAllMDFIR321Data","open","width","afterClosed","value","getMDFIR321Data","next","res","sheet321","dataSource","paginator","sort","error","event","filterValue","target","filter","trim","toLowerCase","firstPage","row","deleteMDFIR321Data","showNotification","err","deleteReportRow","applyFilter","selector","templateUrl","styleUrls","ConfirmationDialogComponent","dialogRef","close","deleteConfirmed","DialogComponent","formBuilder","editData","MatDialogRef","actionsBtn","mdfir321Form","group","bankName","required","bankCode","typeOfPlacements","accountNumber","amount","amount2","effectiveDate","maturityDate","interestRate","upfrontInterestReceived","accruedInterestReceivable","remarks","controls","setValue","valid","postMDFIR321Data","alert","reset","putDetails","putMDFIR321Data","response","addDetails","routes","path","component","pathMatch","Sheet321Module","forChild","declarations","exports","imports"],"mappings":"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","file":"default~generate-report-edit-generate-report-edit-module~generate-report-edit-normal-reports-sheet32~0a4628ff-es5.js","sourcesContent":["import {Inject, Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {environment} from '../../../../../../../environments/environment';\nimport {Observable} from 'rxjs';\nimport {MainPage} from '../../../../../main/main.page';\nimport {ReportService} from '../../../../report.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class Sheet321Service {\n\n  sheetName = 'mdfir321/';\n\n  // @ts-ignore\n  private reportSelectedDate: string;\n  constructor(private http: HttpClient, private reportService: ReportService) {\n    this.reportService.selectedDate.subscribe((date) => {\n      this.reportSelectedDate = date;\n    });\n  }\n\n  // tslint:disable-next-line:typedef\n  postMDFIR321Data(data: any): Observable<any>{\n    return this.http.post<any>(`${environment.baseApi}/` + this.sheetName  + this.reportSelectedDate, data);\n  }\n\n  getMDFIR321Data(): Observable<any>{\n    return this.http.get<any>(`${environment.baseApi}/` + this.sheetName +  this.reportSelectedDate);\n  }\n\n  putMDFIR321Data(id: any, data: any): Observable<any> {\n    console.log(id);\n    return this.http.put<any>(`${environment.baseApi}/` + this.sheetName +  this.reportSelectedDate + '/' + id, data);\n  }\n\n  // tslint:disable-next-line:typedef\n  deleteMDFIR321Data(id: any) {\n    return this.http.delete<any>(`${environment.baseApi}/` + this.sheetName + this.reportSelectedDate + '/' + id);\n  }\n}\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {MatDialog, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport {DialogComponent} from './dialog/dialog.component';\nimport {Sheet321Service} from './sheet321.service';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {ConfirmationDialogComponent} from './confirmation-dialog/confirmation-dialog.component';\nimport { NotifierService } from 'src/app/notifier.service';\n\n\n// @ts-ignore\n@Component({\n  selector: 'app-sheet321',\n  templateUrl: './sheet321.component.html',\n  styleUrls: ['./sheet321.component.css']\n})\nexport class Sheet321Component implements OnInit {\n\n  dataSource: MatTableDataSource<any>;\n  displayedColumns: string[] = ['id', 'bankName', 'bankCode', 'typeOfPlacements',\n  'accountNumber', 'amount', 'amount2', 'tenor', 'effectiveDate', 'maturityDate', 'interestRate',\n    'upfrontInterestReceived', 'accruedInterestReceivable', 'remarks'];\n  confirmDelete: boolean;\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  constructor(private dialog: MatDialog,\n              private sheet321Service: Sheet321Service,\n              private notifierService: NotifierService) { }\n\n  ngOnInit(): void {\n    this.getAllMDFIR321Data();\n  }\n\n  // tslint:disable-next-line:typedef\n\n  openDialog(): void {\n    this.dialog.open(DialogComponent, {\n       width: '30%',\n    }).afterClosed().subscribe(value => {\n      if (value === 'save'){this.getAllMDFIR321Data();\n      }\n    });\n  }\n\n  getAllMDFIR321Data(): void {\n    this.sheet321Service.getMDFIR321Data().subscribe({\n      next: (res) => {\n        console.log(res.sheet321);\n        this.dataSource = new MatTableDataSource(res.sheet321);\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n      }, error: () => {console.log('Error while fetching data');\n      }\n    });\n  }\n\n  // tslint:disable-next-line:typedef\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  editReportRow(row: any): void {\n    this.dialog.open(DialogComponent, {width: '30%', data: row}).afterClosed().subscribe(value => {\n      if (value === 'update'){\n        this.getAllMDFIR321Data();\n      }\n    });\n  }\n\n  deleteReportRow(id: any): void {\n    this.sheet321Service.deleteMDFIR321Data(id).subscribe({\n      next: value => {\n        this.notifierService.showNotification('Deleted successfully', 'OK', 'success');\n        this.getAllMDFIR321Data();\n      }, error: err => {\n        this.notifierService.showNotification('Unable to delete', 'OK', 'error');\n      }\n    });\n  }\n\n  // tslint:disable-next-line:typedef\n  openConfirmationDialog(id) {\n\n    this.dialog.open(ConfirmationDialogComponent, {\n      width: '17%',\n      data: true\n    }).afterClosed().subscribe(value => {\n      if (value === 'delete'){\n        this.deleteReportRow(id);\n        this.getAllMDFIR321Data();\n      }\n    });\n  }\n}\n","\n<div class=\"container\">\n\n  <!--<button mat-flat-button class=\"row_btn\" mat-button (click)=\"openDialog()\">Add Row</button> -->\n\n  <mat-form-field>\n    <mat-label>Filter</mat-label>\n    <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. Mia\" #input>\n  </mat-form-field>\n\n<div class=\"overflow\">\n    <table mat-table [dataSource]=\"dataSource\" matSort>\n\n      <ng-container matColumnDef=\"id\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> S/N </th>\n        <td mat-cell *matCellDef=\"let row; let i = index\">\n          {{ (i+1) + (myPaginator.pageIndex * myPaginator.pageSize) }}</td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"bankName\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> BANK NAME </th>\n        <td mat-cell *matCellDef=\"let row\"> {{row.bankName}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"bankCode\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> BANK CODE </th>\n        <td mat-cell *matCellDef=\"let row\"> {{row.bankCode}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"typeOfPlacements\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> TYPE OF PLACEMENTS </th>\n        <td mat-cell *matCellDef=\"let row\"> {{row.typeOfPlacements}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"accountNumber\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> ACCOUNT NUMBER </th>\n        <td mat-cell *matCellDef=\"let row\"> {{row.accountNumber}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"amount\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> AMOUNT </th>\n        <td mat-cell *matCellDef=\"let row\"> {{row.amount | currency:\"NGN\":\"symbol\"}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"amount2\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> AMOUNT 2 </th>\n        <td mat-cell *matCellDef=\"let row\"> {{row.amount2 | currency:\"NGN\":\"symbol\"}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"tenor\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> TENOR </th>\n        <td mat-cell *matCellDef=\"let row\"> {{row.tenor}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"effectiveDate\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> EFFECTIVE DATE </th>\n        <td mat-cell *matCellDef=\"let row\"> {{row.effectiveDate | date}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"maturityDate\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> MATURITY DATE </th>\n        <td mat-cell *matCellDef=\"let row\"> {{row.maturityDate | date}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"interestRate\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> INTEREST RATE </th>\n        <td mat-cell *matCellDef=\"let row\" > {{row.interestRate}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"upfrontInterestReceived\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> UPFRONT INTEREST RECEIVED </th>\n        <td mat-cell *matCellDef=\"let row\"> {{row.upfrontInterestReceived}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"accruedInterestReceivable\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> ACCRUED INTEREST RECEIVABLE </th>\n        <td mat-cell *matCellDef=\"let row\"> {{row.accruedInterestReceivable}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"remarks\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> REMARKS </th>\n        <td mat-cell *matCellDef=\"let row\" [style.color]=\"row.color\"> {{row.remarks}} </td>\n      </ng-container>\n\n      <!-- <ng-container matColumnDef=\"action\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> ACTIONS </th>\n        <td mat-cell *matCellDef=\"let row\" [style.color]=\"row.color\">\n          <button mat-icon-button color=\"primary\"(click)=\"editReportRow(row)\"><mat-icon>edit</mat-icon></button>\n          <button mat-icon-button color=\"warn\" (click)=\" openConfirmationDialog(row.id)\"><mat-icon>delete</mat-icon></button>\n        </td>\n      </ng-container> -->\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n\n      <!-- Row shown when there is no matching data. -->\n      <tr class=\"mat-row\" *matNoDataRow>\n        <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input.value}}\"</td>\n      </tr>\n    </table>\n  </div>\n  <mat-paginator #myPaginator [length]=\"25\"\n  [pageSize]=\"5\"\n  [pageSizeOptions]=\"[5, 10, 25, 100]\">\n</mat-paginator>\n  </div>\n\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-confirmation-dialog',\n  templateUrl: './confirmation-dialog.component.html',\n  styleUrls: ['./confirmation-dialog.component.css']\n})\nexport class ConfirmationDialogComponent implements OnInit {\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data: boolean, private dialogRef: MatDialogRef<ConfirmationDialogComponent>) { }\n\n  ngOnInit(): void {\n  }\n\n  deleteConfirmed(): void {\n    this.dialogRef.close('delete');\n  }\n}\n","<div mat-dialog-content>\n  <h2>Are you sure you want to delete?</h2>\n</div>\n<div mat-dialog-actions>\n  <button mat-button mat-raised-button class=\"row_btn\"mat-dialog-close cdkFocusInitial>No</button>\n  <button mat-button mat-raised-button color=\"warn\" [mat-dialog-close] (click)=\"deleteConfirmed()\" >Yes</button>\n</div>\n","import {Component, Inject, OnDestroy, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {Sheet321Service} from '../sheet321.service';\nimport {MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport {resolveSrv} from 'dns';\nimport { NotifierService } from 'src/app/notifier.service';\n\n@Component({\n  selector: 'app-dialog',\n  templateUrl: './dialog.component.html',\n  styleUrls: ['./dialog.component.css']\n})\nexport class DialogComponent implements OnInit, OnDestroy {\n  picker1: any;\n  picker2: any;\n  mdfir321Form: FormGroup;\n  actionsBtn = 'Save';\n\n  constructor(private formBuilder: FormBuilder,\n              private sheet321Service: Sheet321Service,\n              private notifierService: NotifierService,\n              @Inject(MAT_DIALOG_DATA) public editData: any,\n              // tslint:disable-next-line:no-shadowed-variable\n              private MatDialogRef: MatDialogRef<DialogComponent>) { }\n\n  ngOnInit(): void {\n    this.mdfir321Form = this.formBuilder.group({\n      bankName: ['', Validators.required],\n      bankCode: ['', Validators.required],\n      typeOfPlacements: ['', Validators.required],\n      accountNumber: ['', Validators.required],\n      amount: ['', Validators.required],\n      amount2: ['', Validators.required],\n      effectiveDate: ['', Validators.required],\n      maturityDate: ['', Validators.required],\n      interestRate: ['', Validators.required],\n      upfrontInterestReceived: ['', Validators.required],\n      accruedInterestReceivable: ['', Validators.required],\n      remarks: ['', Validators.required],\n    });\n    if (this.editData){\n      this.actionsBtn = 'Update';\n      // tslint:disable-next-line:no-unused-expression\n      this.mdfir321Form.controls.bankName.setValue(this.editData.bankName);\n      this.mdfir321Form.controls.bankCode.setValue(this.editData.bankCode);\n      this.mdfir321Form.controls.typeOfPlacements.setValue(this.editData.typeOfPlacements);\n      this.mdfir321Form.controls.accountNumber.setValue(this.editData.accountNumber);\n      this.mdfir321Form.controls.amount.setValue(this.editData.amount);\n      this.mdfir321Form.controls.amount2.setValue(this.editData.amount2);\n      this.mdfir321Form.controls.effectiveDate.setValue(this.editData.effectiveDate);\n      this.mdfir321Form.controls.maturityDate.setValue(this.editData.maturityDate);\n      this.mdfir321Form.controls.interestRate.setValue(this.editData.interestRate);\n      this.mdfir321Form.controls.upfrontInterestReceived.setValue(this.editData.upfrontInterestReceived);\n      this.mdfir321Form.controls.accruedInterestReceivable.setValue(this.editData.accruedInterestReceivable);\n      this.mdfir321Form.controls.remarks.setValue(this.editData.remarks);\n    }\n  }\n\n  ngOnDestroy(): void {\n  }\n\n  addDetails(): void {\n    if (!this.editData){\n      if (this.mdfir321Form.valid) {\n        this.sheet321Service.postMDFIR321Data(this.mdfir321Form.value).subscribe(\n          {\n            next: (res) => {\n              alert('Mdfir321 added');\n              this.mdfir321Form.reset();\n              this.MatDialogRef.close('save');\n            },\n            error: () => {\n              alert('MDFIRprobws');\n            }}\n        );\n      }\n    } else {\n      this.putDetails();\n  }\n    // tslint:disable-next-line:typedef\n    console.log(this.mdfir321Form.value);\n}\n\n  // tslint:disable-next-line:typedef\n  private putDetails(): void {\n    this.sheet321Service.putMDFIR321Data(this.editData.id, this.mdfir321Form.value).subscribe({\n      next: (response) => {\n        this.notifierService.showNotification('MDFIR321 updated successfully', 'ok', 'success');\n        this.mdfir321Form.reset();\n        this.MatDialogRef.close('update');\n      },\n      error: () => {\n          this.notifierService.showNotification('Error updating Row', 'OK', 'error');\n      }\n    });\n  }\n  }\n\n","<h1 mat-dialog-title>Report MDFIR321 Form</h1>\n<div mat-dialog-content>\n  <form [formGroup]=\"mdfir321Form\">\n\n    <mat-form-field appearance=\"outline\">\n      <mat-label>Bank Name</mat-label>\n      <input matInput type=\"text\" formControlName=\"bankName\">\n    </mat-form-field>\n\n    <mat-form-field appearance=\"outline\">\n      <mat-label>Bank Code</mat-label>\n      <input matInput type=\"text\" formControlName=\"bankCode\">\n    </mat-form-field>\n\n    <mat-form-field appearance=\"outline\">\n      <mat-label>Type of Placement</mat-label>\n      <input matInput type=\"text\" formControlName=\"typeOfPlacements\">\n    </mat-form-field>\n\n    <mat-form-field appearance=\"outline\">\n      <mat-label>Account Number</mat-label>\n      <input matInput type=\"text\"formControlName=\"accountNumber\">\n    </mat-form-field>\n\n    <mat-form-field appearance=\"outline\">\n      <mat-label>Amount</mat-label>\n      <input matInput type=\"number\" formControlName=\"amount\">\n    </mat-form-field>\n\n    <mat-form-field appearance=\"outline\">\n      <mat-label>Amount 2</mat-label>\n      <input matInput type=\"number\" formControlName=\"amount2\">\n    </mat-form-field>\n\n    <mat-form-field appearance=\"outline\">\n      <mat-label>Effective Date</mat-label>\n      <input matInput [matDatepicker]=\"picker1\" formControlName=\"effectiveDate\">\n      <mat-datepicker-toggle matSuffix [for]=\"picker1\"></mat-datepicker-toggle>\n      <mat-datepicker #picker1></mat-datepicker>\n    </mat-form-field>\n\n\n    <mat-form-field appearance=\"outline\">\n      <mat-label>Maturity Date</mat-label>\n      <input matInput [matDatepicker]=\"picker2\"formControlName=\"maturityDate\">\n      <mat-datepicker-toggle matSuffix [for]=\"picker2\"></mat-datepicker-toggle>\n      <mat-datepicker #picker2></mat-datepicker>\n    </mat-form-field>\n\n    <mat-form-field appearance=\"outline\">\n      <mat-label>Interest Rate</mat-label>\n      <input matInput type=\"number\" formControlName=\"interestRate\">\n    </mat-form-field>\n\n\n    <mat-form-field appearance=\"outline\">\n      <mat-label>Upfront Interest Received</mat-label>\n      <input matInput type=\"number\" formControlName=\"upfrontInterestReceived\">\n    </mat-form-field>\n\n    <mat-form-field appearance=\"outline\">\n      <mat-label>Accrued Interest Receivable</mat-label>\n      <input matInput type=\"number\" formControlName=\"accruedInterestReceivable\">\n    </mat-form-field>\n\n    <mat-form-field appearance=\"outline\">\n      <mat-label>Remarks</mat-label>\n      <input matInput type=\"test\" formControlName=\"remarks\">\n    </mat-form-field>\n  </form>\n</div>\n<div mat-dialog-actions>\n  <button mat-raised-button color=\"warn\" mat-dialog-close>Close</button>\n  <button mat-raised-button class=\"save_btn\" [disabled]=\"!mdfir321Form.valid\" cdkFocusInitial (click)=\"addDetails()\">{{actionsBtn}}</button>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Sheet321Component } from './sheet321.component';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatButtonModule} from '@angular/material/button';\nimport {RouterModule, Routes} from '@angular/router';\nimport {CommonsModule} from '../../../../../../common/commons.module';\nimport { DialogComponent } from './dialog/dialog.component';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatNativeDateModule} from '@angular/material/core';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {HttpClientModule} from '@angular/common/http';\nimport {MatSortModule} from '@angular/material/sort';\nimport { ConfirmationDialogComponent } from './confirmation-dialog/confirmation-dialog.component';\n\nconst routes: Routes = [\n\n  {path: '', component: Sheet321Component, pathMatch: 'full'},\n];\n\n@NgModule({\n  declarations: [Sheet321Component, DialogComponent, ConfirmationDialogComponent],\n  exports: [\n    Sheet321Component\n  ],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    CommonsModule,\n    MatSelectModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatTooltipModule,\n    MatSidenavModule,\n    MatDialogModule,\n    MatButtonModule,\n    MatIconModule,\n    MatInputModule,\n    MatInputModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    MatSortModule,\n  ]\n})\nexport class Sheet321Module { }\n"]}