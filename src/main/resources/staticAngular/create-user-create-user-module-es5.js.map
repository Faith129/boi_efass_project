{"version":3,"sources":["webpack:///src/app/pages/user-settings/create-user/create-user.module.ts","webpack:///src/app/pages/user-settings/create-user/create-user.component.ts","webpack:///src/app/pages/user-settings/create-user/create-user.component.html"],"names":["routes","path","component","CreateUserModule","forChild","declarations","imports","CreateUserComponent","authService","userSettingsService","isLoading","createUserForm","username","required","minLength","password","timeIntervalId","setInterval","nowDate","Date","$user","user","subscribe","valid","body","usernameInput","value","role","createUser","response","reset","title","text","icon","err","errorMessage","status","serverMessage","error","message","details","Array","join","clearInterval","unsubscribe","get","selector","templateUrl","styleUrls"],"mappings":"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","file":"create-user-create-user-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { CreateUserComponent } from './create-user.component';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\nconst routes: Routes = [\r\n  {path: '', component: CreateUserComponent}\r\n];\r\n\r\n@NgModule({\r\n  declarations: [CreateUserComponent],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    ReactiveFormsModule\r\n\r\n  ]\r\n})\r\nexport class CreateUserModule { }\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/common/auth.service';\r\nimport { ValidationError } from 'src/app/data/validation-error';\r\nimport swal from 'sweetalert';\r\nimport { UserSettingsService } from '../user-settings.service';\r\n\r\n@Component({\r\n  selector: 'app-create-user',\r\n  templateUrl: './create-user.component.html',\r\n  styleUrls: ['./create-user.component.css']\r\n})\r\nexport class CreateUserComponent implements OnInit, OnDestroy {\r\n\r\n  username: string;\r\n  $user: Subscription;\r\n  timeIntervalId: any;\r\n  nowDate: Date;\r\n\r\n  createUserForm: FormGroup;\r\n  isLoading = false;\r\n\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private userSettingsService: UserSettingsService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.createUserForm = new FormGroup({\r\n      username: new FormControl(null, [Validators.required, Validators.minLength(4)]),\r\n      password: new FormControl(null, [Validators.required, Validators.minLength(6)]),\r\n    });\r\n\r\n    this.timeIntervalId = setInterval(() => {\r\n      this.nowDate = new Date();\r\n    }, 1000);\r\n\r\n    this.$user = this.authService.user.subscribe(user => {\r\n      this.username = user?.username;\r\n    });\r\n  }\r\n\r\n  createUser() {\r\n    if (this.createUserForm.valid) {\r\n      const body = {\r\n        username: this.usernameInput.value,\r\n        password: this.password.value,\r\n        role: 'ADMIN_ROLE'\r\n      };\r\n\r\n      this.isLoading = true;\r\n      this.userSettingsService.createUser(body).subscribe((response) => {\r\n        this.isLoading = false;\r\n        this.createUserForm.reset();\r\n        swal({\r\n          title: 'Successful',\r\n          text: 'Password updated',\r\n          icon: 'success'\r\n        });\r\n      }, (err) => {\r\n        this.isLoading = false;\r\n        this.createUserForm.reset({username: body.username});\r\n        let errorMessage = 'An unknown Error occurred';\r\n        if (err.status === 0) {\r\n          errorMessage = 'An unknown Error occurred';\r\n        } else if (err.status === 400) {\r\n          const serverMessage = err.error as ValidationError;\r\n          errorMessage = `${serverMessage.message}\\n${serverMessage?.details}` ;\r\n        } else {\r\n          const serverMessage = err.error;\r\n          if (serverMessage?.message instanceof Array) {\r\n            errorMessage = serverMessage.message.join('<br>');\r\n          } else {\r\n            errorMessage = serverMessage?.message || errorMessage;\r\n          }\r\n        }\r\n        swal({\r\n          title: 'Error',\r\n          text: errorMessage,\r\n          icon: 'error'\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  get usernameInput() {\r\n    return this.createUserForm.get('username');\r\n  }\r\n\r\n  get password() {\r\n    return this.createUserForm.get('password');\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    clearInterval(this.timeIntervalId);\r\n\r\n    if (this.$user) {\r\n      this.$user.unsubscribe();\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"page-header\" style=\"padding: 20px 20px;\">\r\n    <h1>\r\n      Settings <small>Create &amp; user </small>\r\n    </h1>\r\n  </div>\r\n  \r\n\r\n  <div class=\"container\">\r\n\r\n  <div class=\"panel panel-default\">\r\n    <div class=\"panel-heading\">\r\n    <i class=\"fa fa-external-link-square\"></i>Profile\r\n    \r\n    </div>\r\n    <div class=\"panel-body\">\r\n    <div class=\"col-sm-9\">\r\n    <b style=\"color: gray; font-size: 15px;\">\r\n    USERNAME: </b> <b style=\"color: gray; font-size: 15px;\">{{username | titlecase}}</b>\r\n    \r\n    <div class=\"form-group\">\r\n    <b style=\"color: gray; font-size: 15px;\">\r\n    DATE: </b> <b>{{nowDate | date:'medium'}}</b>\r\n    </div>\r\n    </div>\r\n    <br>\r\n    \r\n    <!-- end: PAGE TITLE & BREADCRUMB -->\r\n    </div>\r\n    </div>\r\n\r\n          \r\n  </div>\r\n\r\n  \r\n<div class=\"container\">\r\n    <div class=\"row\">\r\n        <div class=\"col-12 col-sm-6\">\r\n        <!-- start: TEXT FIELDS PANEL -->\r\n        <div class=\"panel panel-default\">\r\n        <div class=\"panel-heading\">\r\n        <i class=\"fa fa-external-link-square\"></i>Password Informatiom\r\n        \r\n        </div>\r\n        <div class=\"panel-body\">\r\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        <form role=\"form\" class=\"form-horizontal\" [formGroup]=\"createUserForm\" (ngSubmit)=\"createUser()\">\r\n        \r\n        <div class=\"form-group\">\r\n        <label class=\"col-sm-2 control-label\" for=\"form-field-2\">\r\n         Username </label>\r\n            <div class=\"col-sm-9\">\r\n                <input type=\"text\" placeholder=\"Username\" id=\"form-field-2\" class=\"form-control\" \r\n                    formControlName=\"username\"\r\n                >\r\n                <span class=\"error\" *ngIf=\"usernameInput.touched && usernameInput.hasError('required')\"> Username required</span>\r\n                <span class=\"error\" *ngIf=\"usernameInput.touched && usernameInput.hasError('minlength')\"> Enter minimum of 4 characters</span>\r\n            </div>\r\n        </div>\r\n        \r\n        <div class=\"form-group\">\r\n        <label class=\"col-sm-2 control-label\" for=\"form-field-2\">\r\n        Password </label>\r\n        <div class=\"col-sm-9\">\r\n        <input type=\"password\" placeholder=\"Password\" id=\"form-field-2\" class=\"form-control\" \r\n            formControlName=\"password\" autocomplete=\"new-password\"\r\n        >\r\n        <span class=\"error\" *ngIf=\"password.touched && password.hasError('required')\"> Password is required</span>\r\n        <span class=\"error\" *ngIf=\"password.touched && password.hasError('minlength')\"> Enter minimum of 6 characters</span>\r\n        </div>\r\n        </div>\r\n        \r\n        <br> <br>\r\n        \r\n        \r\n        \r\n        <div class=\"form-group\">\r\n        <label class=\"col-sm-2 control-label\" for=\"form-field-2\">\r\n        \r\n        </label>\r\n        <div class=\"col-sm-9\">\r\n        <button class=\"btn btn-primary btn-block\" type=\"submit\" [disabled]=\"isLoading || createUserForm.invalid\">\r\n        <div class=\"loadingSpinner\" *ngIf=\"isLoading\"></div>\r\n        <span *ngIf=\"!isLoading\">Save</span>\r\n        </button>\r\n        </div>\r\n        </div>\r\n        </form>\r\n        </div>\r\n        </div>\r\n        \r\n        \r\n        \r\n        </div>\r\n        \r\n        \r\n        \r\n        \r\n        <!-- end: PAGE TITLE & BREADCRUMB -->\r\n    </div>\r\n</div>\r\n"]}