{"version":3,"sources":["webpack:///src/app/pages/xml-viewer/xml-viewer.service.ts","webpack:///src/app/pages/user-settings/user-settings.service.ts"],"names":["XmlViewerService","httpClient","$documentList","get","baseApi","pipe","response","next","reportData","id","filename","documentList","subscribe","docList","doc","find","_doc","responseType","observe","dataType","type","binaryData","push","body","downloadLink","document","createElement","href","window","URL","createObjectURL","Blob","setAttribute","file_name","appendChild","click","parentNode","removeChild","err","errorMessage","status","serverMessage","error","message","details","Array","join","title","text","icon","dataList","listIndex","findIndex","splice","asObservable","providedIn","UserSettingsService","put","post"],"mappings":"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","file":"common-es5.js","sourcesContent":["import { HttpClient, HttpResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { map, switchMap, take } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\nimport { saveAs } from 'file-saver';\r\nimport { DocData } from 'src/app/data/doc-data';\r\nimport { DocResponse } from 'src/app/data/doc-response';\r\nimport swal from 'sweetalert';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class XmlViewerService {\r\n\r\n  private readonly $documentList = new BehaviorSubject<Array<DocData>>([]);\r\n\r\n  constructor(\r\n    private readonly  httpClient: HttpClient\r\n  ) { }\r\n\r\n  getDocuments () {\r\n    return this.httpClient.get<DocResponse>(`${environment.baseApi}/files`).pipe(map((response) => {\r\n      this.$documentList.next(response.reportData);\r\n    }));\r\n  }\r\n\r\n\r\n  saveDocument(id: number, filename: string = 'myfile'): void{\r\n    this.documentList.pipe(take(1)).subscribe((docList) => {\r\n      const doc = docList.find((_doc) => _doc.id === id);\r\n      this.httpClient.get(`${environment.baseApi}/download/excel/${id}`, { responseType: 'blob' as 'json' , observe: 'response'})\r\n      .pipe(take(1)).subscribe((response: HttpResponse<Blob>) => {\r\n          let dataType = response.type;\r\n          let binaryData = [];\r\n          binaryData.push(response.body);\r\n          let downloadLink = document.createElement('a');\r\n          downloadLink.href = window.URL.createObjectURL(new Blob(binaryData, {type: 'blob'}));\r\n          downloadLink.setAttribute('download', `${doc.file_name}.xlsx`);\r\n          document.body.appendChild(downloadLink);\r\n          downloadLink.click();\r\n          downloadLink.parentNode.removeChild(downloadLink);\r\n        }, err => {\r\n          let errorMessage = 'An unknown Error occurred';\r\n          if (err.status === 0) {\r\n          errorMessage = 'An unknown Error occurred';\r\n        } else if (err.status === 400) {\r\n          const serverMessage = err.error;\r\n          errorMessage = `${serverMessage.message}\\n${serverMessage?.details}` ;\r\n        } else {\r\n          const serverMessage = err.error;\r\n          if (serverMessage?.message instanceof Array) {\r\n            errorMessage = serverMessage.message.join('<br>');\r\n          } else {\r\n            errorMessage = serverMessage?.message || errorMessage;\r\n          }\r\n        }\r\n          swal({\r\n          title: 'Error',\r\n          text: errorMessage,\r\n          icon: 'error'\r\n        });\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n  deleteDocument(id: number){\r\n    return this.httpClient.delete(`${environment.baseApi}/deletefile/${id}`).pipe(take(1), switchMap((dataList => {\r\n      return this.documentList;\r\n    })), take(1), map(docList => {\r\n      const listIndex = docList.findIndex(doc => doc.id === id);\r\n      docList.splice(listIndex, 1);\r\n      this.$documentList.next(docList);\r\n    }));\r\n  }\r\n\r\n  get documentList () {\r\n    return this.$documentList.asObservable();\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\nimport { saveAs } from 'file-saver';\r\nimport { DocData } from 'src/app/data/doc-data';\r\nimport { DocResponse } from 'src/app/data/doc-response';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserSettingsService {\r\n\r\n  constructor(\r\n    private readonly  httpClient: HttpClient\r\n  ) { }\r\n\r\n  updatePassword (body) {\r\n    return this.httpClient.put(`${environment.baseApi}/user`, body).pipe(map((response) => {\r\n\r\n    }));\r\n  }\r\n\r\n  createUser (body) {\r\n    return this.httpClient.post(`${environment.baseApi}/users`, body).pipe(map((response) => {\r\n\r\n    }));\r\n  }\r\n\r\n}\r\n"]}