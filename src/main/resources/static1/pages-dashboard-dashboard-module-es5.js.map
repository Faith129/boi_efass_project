{"version":3,"sources":["webpack:///src/app/pages/dashboard/dashboard.module.ts","webpack:///src/app/pages/dashboard/dashboard.page.ts","webpack:///src/app/pages/dashboard/dashboard.page.html","webpack:///src/app/pages/main/report-history.service.ts","webpack:///src/app/pages/dashboard/dashboard-routing.module.ts","webpack:///src/app/common/generate-report.guard.ts"],"names":["DashboardModule","declarations","imports","DashboardPage","authService","reportService","reportHistory","selectedDate","$dateSubscription","subscribe","date","logout","unsubscribe","selector","templateUrl","styleUrls","ReportHistoryService","http","get","baseApi","post","responseType","id","providedIn","routes","path","component","canActivate","canActivateChild","children","loadChildren","then","m","UserSettingsModule","GenerateReportModule","XmlViewerModule","MainModule","pathMatch","DashboardRoutingModule","forChild","exports","GenerateReportGuard","router","location","next","state","pipe","navigationId","getState","length","undefined","navigate","route","segments"],"mappings":";;;;;;;;;;;;;;;;;;;;AACA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAuBaA,e;;;;;cAAAA;;;;2BAAAA,e;AAAe,S;AAAA,kBATjB,CACP,4DADO,EAEP,gFAFO,EAGP,0DAHO,EAIP,oEAJO,CASiB;;;;4HAAfA,e,EAAe;AAAA,yBAVX,6DAUW;AAVE,oBAE1B,4DAF0B,EAG1B,gFAH0B,EAI1B,0DAJ0B,EAK1B,oEAL0B;AAUF,S;AALX,O;;;;;wEAKJA,e,EAAe;gBAX3B,sDAW2B;iBAXlB;AACRC,wBAAY,EAAE,CAAC,6DAAD,CADN;AAERC,mBAAO,EAAE,CACP,4DADO,EAEP,gFAFO,EAGP,0DAHO,EAIP,oEAJO;AAFD,W;AAWkB,U;;;;;;;;;;;;;;;;;;ACxB5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;UAaaC,a;AAKX,+BACmBC,WADnB,EAEmBC,aAFnB,EAGmBC,aAHnB,EAGsD;AAAA;;AAFnC,eAAAF,WAAA,GAAAA,WAAA;AACA,eAAAC,aAAA,GAAAA,aAAA;AACA,eAAAC,aAAA,GAAAA,aAAA;AANnB,eAAAC,YAAA,GAAuB,IAAvB;AAOK;;;;qCAEG;AAAA;;AACN,iBAAKC,iBAAL,GAAyB,KAAKH,aAAL,CAAmBE,YAAnB,CAAgCE,SAAhC,CAA0C,UAAAC,IAAI,EAAI;AAC1E,mBAAI,CAACH,YAAL,GAAoBG,IAApB;AACA,aAFwB,CAAzB;AAGD;;;4CAEiB,CAEjB;;;mCAEQ;AACP,iBAAKN,WAAL,CAAiBO,MAAjB;AACD,W,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;;wCAEc;AACZ,gBAAG,KAAKH,iBAAR,EAA2B;AACzB,mBAAKA,iBAAL,CAAuBI,WAAvB;AACD;AACF;;;;;;;yBA3CUT,a,EAAa,wI,EAAA,8I,EAAA,kJ;AAAA,O;;;cAAbA,a;AAAa,sC;AAAA,iB;AAAA,e;AAAA,ue;AAAA;AAAA;ACZ1B;;AAGE;;AAAgD;;AAA0D;;AAG1G;;AAEI;;AAA4B;;AAA6D;;AAE7F;;AACA;;AAAG;;AAAkB;AAAA,qBAAS,IAAAQ,MAAA,EAAT;AAAiB,aAAjB;;AAAmB;;AAAM;;AAAI;;AACpD;;AAGA;;AACE;;AACA;;AACA;;AAA8F;;AAAU;;AAAI;;AAAY;;AAAS;;AACjI;;AAA4I;;AAAU;;AAAM;;AAAY;;AAAe;;AACvL;;AAAwD;;AAAU;;AAAQ;;AAAY;;AAAQ;;AAC9F;;AAEF;;AACE;;AACF;;;;AAPuD;;AAAA;;AAClD;;AAAA;;;;;;;;;wEDPQR,a,EAAa;gBALzB,uDAKyB;iBALf;AACTU,oBAAQ,EAAE,eADD;AAETC,uBAAW,EAAC,uBAFH;AAGTC,qBAAS,EAAE,CAAC,sBAAD;AAHF,W;AAKe,U;;;;;;;;;;;;;;;;;;;;;;;;;;AEb1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAQaC,oB;AAEX,sCAAoBC,IAApB,EAAsC;AAAA;;AAAlB,eAAAA,IAAA,GAAAA,IAAA;AAAqB;;;;6CAEzB;AACd,mBAAO,KAAKA,IAAL,CAAUC,GAAV,CAAmB,UAAG,sEAAYC,OAAf,SAA4B,YAA/C,CAAP;AACD;;;yCAEcT,I,EAAS;AACtB,mBAAQ,KAAKO,IAAL,CAAUG,IAAV,CAAe,UAAG,sEAAYD,OAAf,SAA4B,MAA3C,EAAmDT,IAAnD,EAAyD;AAACW,0BAAY,EAAE;AAAf,aAAzD,CAAR;AACA;;;sCAIWX,I,EAAS;AACpB,mBAAQ,KAAKO,IAAL,CAAUG,IAAV,CAAe,UAAG,sEAAYD,OAAf,SAA4B,SAA3C,EAAsDT,IAAtD,EAA4D;AAACW,0BAAY,EAAE;AAAf,aAA5D,CAAR;AACA,W,CAIF;;;;8CACoBC,E,EAAS;AAC3B,mBAAO,KAAKL,IAAL,WAAsB,UAAG,sEAAYE,OAAf,SAA4B,WAA5B,GAA0CG,EAAhE,CAAP;AACD;;;;;;;yBAvBUN,oB,EAAoB,uH;AAAA,O;;;eAApBA,oB;AAAoB,iBAApBA,oBAAoB,K;AAAA,oBAFnB;;;;;wEAEDA,oB,EAAoB;gBAHhC,wDAGgC;iBAHrB;AACVO,sBAAU,EAAE;AADF,W;AAGqB,U;;;;;;;;;;;;;;;;;;;;;;ACRjC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAOA,UAAMC,MAAM,GAAW,CAErB;AACEC,YAAI,EAAE,EADR;AACYC,iBAAS,EAAE,6DADvB;AAEEC,mBAAW,EAAE,CAAC,qFAAD,CAFf;AAEqCC,wBAAgB,EAAE,CAAC,qFAAD,CAFvD;AAGEC,gBAAQ,EAAE,CACR;AAACJ,cAAI,EAAE,eAAP;AAAwBK,sBAAY,EAAE;AAAA,mBAAM;AAAA;AAAA;AAAA;AAAA,qBAAgDC,IAAhD,CAAsD,UAAAC,CAAC;AAAA,qBAAIA,CAAC,CAACC,kBAAN;AAAA,aAAvD,CAAN;AAAA;AAAtC,SADQ,EAER;AAACR,cAAI,EAAE,iBAAP;AAA0BK,sBAAY,EAAE;AAAA,mBAAM;AAAA;AAAA;AAAA;AAAA,qBAAoDC,IAApD,CAA0D,UAAAC,CAAC;AAAA,qBAAIA,CAAC,CAACE,oBAAN;AAAA,aAA3D,CAAN;AAAA,WAAxC;AAAsIP,qBAAW,EAAE,CAAC,wFAAD,CAAnJ;AAA0KC,0BAAgB,EAAE,CAAC,wFAAD;AAA5L,SAFQ,EAGR;AAACH,cAAI,EAAE,SAAP;AAAkBK,sBAAY,EAAE;AAAA,mBAAM;AAAA;AAAA;AAAA;AAAA,qBAA0CC,IAA1C,CAAgD,UAAAC,CAAC;AAAA,qBAAIA,CAAC,CAACG,eAAN;AAAA,aAAjD,CAAN;AAAA;AAAhC,SAHQ,EAIR;AAACV,cAAI,EAAE,EAAP;AAAWK,sBAAY,EAAE;AAAA,mBAAM;AAAA;AAAA;AAAA;AAAA,qBAA8BC,IAA9B,CAAoC,UAAAC,CAAC;AAAA,qBAAIA,CAAC,CAACI,UAAN;AAAA,aAArC,CAAN;AAAA,WAAzB;AAAwFC,mBAAS,EAAE;AAAnG,SAJQ;AAHZ,OAFqB,CAAvB;;UA4BaC,sB;;;;;cAAAA;;;;2BAAAA,sB;AAAsB,S;AAAA,kBAHxB,CAAC,6DAAaC,QAAb,CAAsBf,MAAtB,CAAD,CAGwB,EAFvB,4DAEuB;;;;4HAAtBc,sB,EAAsB;AAAA;AAAA,oBAFvB,4DAEuB;AAAA,S;AAFX,O;;;;;wEAEXA,sB,EAAsB;gBAJlC,sDAIkC;iBAJzB;AACRpC,mBAAO,EAAE,CAAC,6DAAaqC,QAAb,CAAsBf,MAAtB,CAAD,CADD;AAERgB,mBAAO,EAAE,CAAC,4DAAD;AAFD,W;AAIyB,U;;;;;;;;;;;;;;;;;;AClCnC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAOA;;;;;UAMaC,mB;AAEX,qCACmBC,MADnB,EAEUrC,aAFV,EAGmBsC,QAHnB,EAGqC;AAAA;;AAFlB,eAAAD,MAAA,GAAAA,MAAA;AACT,eAAArC,aAAA,GAAAA,aAAA;AACS,eAAAsC,QAAA,GAAAA,QAAA;AACf;;;;sCAGFC,I,EACAC,K,EAA0B;AAAA;;AACxB,mBAAO,KAAKxC,aAAL,CAAmBE,YAAnB,CAAgCuC,IAAhC,CAAqC,2DAAI,UAAApC,IAAI,EAAI;qBAAA,CACtD;;;AACA,kBAAMqC,YAAY,GAAG,CAAC,EAAJ,GAAI,MAAI,CAACJ,QAAL,CAAcK,QAAd,EAAD,MAAiC,IAAjC,IAAiC,aAAjC,GAAiC,MAAjC,GAAiC,GAAED,YAAxD;;AACA,kBAAGrC,IAAI,KAAK,IAAT,IAAiBA,IAAI,CAACuC,MAAL,GAAc,CAAlC,EAAqC;AACnC,uBAAO,IAAP;AACD,eAFD,MAEO,IAAIF,YAAY,KAAK,IAAjB,IAAyBA,YAAY,KAAKG,SAA1C,IAAwDH,YAAY,IAAI,CAA5E,EAA+E;AACpF,sBAAI,CAACL,MAAL,CAAYS,QAAZ,CAAqB,CAAC,GAAD,CAArB;AACD;;AACD,qBAAO,KAAP;AACD,aAT2C,CAArC,CAAP;AAUH;;;2CAECP,I,EACAC,K,EAA0B;AACxB,mBAAO,KAAKlB,WAAL,CAAiBiB,IAAjB,EAAuBC,KAAvB,CAAP;AACH;;;kCAECO,K,EACAC,Q,EAAsB;AACpB,mBAAO,KAAKhD,aAAL,CAAmBE,YAAnB,CAAgCuC,IAAhC,CAAqC,2DAAI,UAAApC,IAAI,EAAI;AACtD,kBAAGA,IAAI,KAAK,IAAT,IAAiBA,IAAI,CAACuC,MAAL,GAAc,CAAlC,EAAqC;AACnC,uBAAO,IAAP;AACD;;AACD,qBAAO,KAAP;AACD,aAL2C,CAArC,CAAP;AAMH;;;;;;;yBApCUR,mB,EAAmB,8G,EAAA,2I,EAAA,gH;AAAA,O;;;eAAnBA,mB;AAAmB,iBAAnBA,mBAAmB,K;AAAA,oBAFlB;;;;;wEAEDA,mB,EAAmB;gBAH/B,wDAG+B;iBAHpB;AACVlB,sBAAU,EAAE;AADF,W;AAGoB,U","file":"pages-dashboard-dashboard-module-es5.js","sourcesContent":["import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\n\r\nimport { FormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { DashboardRoutingModule } from './dashboard-routing.module';\r\nimport { DashboardPage } from './dashboard.page';\r\nimport {MatIconModule} from '@angular/material/icon';\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [DashboardPage],\r\n  imports: [\r\n    CommonModule,\r\n    DashboardRoutingModule,\r\n    FormsModule,\r\n    MatIconModule,\r\n\r\n\r\n  ]\r\n})\r\nexport class DashboardModule { }\r\n","import { AfterViewInit, Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { switchMap, take } from 'rxjs/operators';\r\nimport { AuthService } from 'src/app/common/auth.service';\r\nimport { ReportService } from '../generate-report/report.service';\r\nimport swa from 'sweetalert';\r\nimport { ReportHistoryService } from '../main/report-history.service';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl:'./dashboard.page.html',\r\n  styleUrls: ['./dashboard.page.css']\r\n})\r\nexport class DashboardPage implements OnInit, OnDestroy, AfterViewInit {\r\n\r\n  selectedDate: string = null;\r\n  $dateSubscription: Subscription;\r\n\r\n  constructor(\r\n    private readonly authService: AuthService,\r\n    private readonly reportService: ReportService,\r\n    private readonly reportHistory: ReportHistoryService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.$dateSubscription = this.reportService.selectedDate.subscribe(date => {\r\n     this.selectedDate = date;\r\n    })\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n\r\n  }\r\n\r\n  logout() {\r\n    this.authService.logout()\r\n  }\r\n\r\n  // storeDate() {\r\n  //   if(this.selectedDate !== null && this.selectedDate.length !== 0) {\r\n  //     console.log(this.selectedDate)\r\n  //     // this.reportService.saveReportDate().subscribe(_ => {}, err => {\r\n  //         // swa({\r\n  //         //   title: 'Couldn\\'t set date',\r\n  //         //   text: `An error occurred while setting date`,\r\n  //         //   icon: 'error',\r\n  //         // });\r\n  //     this.reportHistory.postReportDate(this.selectedDate);\r\n\r\n  //   }\r\n  // }\r\n\r\n  ngOnDestroy() {\r\n    if(this.$dateSubscription) {\r\n      this.$dateSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n}\r\n","\r\n<div class=\"topnav\" id=\"myTopnav\">\r\n  <!-- <a class=\"navbar-brand\" routerLink=\"/dashboard\"><img src=\"https://i0.wp.com/neptunesoftwaregroup.com/wp-content/uploads/2021/06/logos2.png?resize=300%2C97&ssl=1\" /></a> -->\r\n  <!-- <a class=\"navbar-brand\" routerLink=\"/dashboard\"><img src=\"../../../assets/img/Neptune2.png\" /></a> -->\r\n  <a class=\"navbar-brand\" routerLink=\"/dashboard\"><img src=\"../../../assets/img/efass-dashboard-logo.png\" /></a>\r\n\r\n\r\n  <div class=\"navbar-brand\">\r\n      <!-- <img src=\"https://i0.wp.com/neptunesoftwaregroup.com/wp-content/uploads/2021/06/logos2.png?resize=300%2C97&ssl=1\" /> -->\r\n      <span class=\"h4 text-white\">Electronic Financial Analysis and Surveillance System (Efass)</span>\r\n      <!-- <img src=\"./assets/img/Neptune_logo.png\" alt=\"\"/> -->\r\n  </div>\r\n  <b><a class=\"logout\" (click)=\"logout()\">LOGOUT</a></b>\r\n</div>\r\n\r\n<!-- The sidebar -->\r\n<div class=\"sidebar\">\r\n  <br>\r\n  <br>\r\n  <a routerLinkActive=\"active\" routerLink=\"/dashboard\" [routerLinkActiveOptions]=\"{exact:true}\"><mat-icon>home</mat-icon> Dashboard</a>\r\n  <a [class.disabled]=\"selectedDate === null || selectedDate.length === 0\" routerLinkActive=\"active\" routerLink=\"generate_report/data/assets\"><mat-icon>folder</mat-icon> Generate Report</a>\r\n  <a routerLinkActive=\"active\" routerLink=\"user_settings\"><mat-icon>settings</mat-icon> Settings</a>\r\n  </div>\r\n<!-- Page content -->\r\n<div class=\"main\">\r\n  <router-outlet></router-outlet>\r\n</div>\r\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {environment} from '../../../environments/environment';\nimport {Observable} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ReportHistoryService {\n\n  constructor(private http: HttpClient) { }\n\n  getReportHistory(): Observable<any> {\n    return this.http.get<any>(`${environment.baseApi}/` + 'activities');\n  }\n\n  postReportDate(date: any): Observable<any> {\n    return  this.http.post(`${environment.baseApi}/` + 'date', date, {responseType: 'text'});\n   }\n\n\n\n   postCbnDate(date: any): Observable<any> {\n    return  this.http.post(`${environment.baseApi}/` + 'cbnDate', date, {responseType: 'text'});\n   }\n\n\n\n  // tslint:disable-next-line:typedef\n  deleteReportHistory(id: any) {\n    return this.http.delete<any>(`${environment.baseApi}/` + 'activity/' + id);\n  }\n}\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AuthenticatedGuard } from 'src/app/common/authenticated.guard';\r\nimport { GenerateReportGuard } from 'src/app/common/generate-report.guard';\r\nimport { DashboardPage } from './dashboard.page';\r\n\r\n\r\nconst routes: Routes = [\r\n\r\n  {\r\n    path: '', component: DashboardPage,\r\n    canActivate: [AuthenticatedGuard], canActivateChild: [AuthenticatedGuard],\r\n    children: [\r\n      {path: 'user_settings', loadChildren: () => import('../user-settings/user-settings.module').then( m => m.UserSettingsModule)},\r\n      {path: 'generate_report', loadChildren: () => import('../generate-report/generate-report.module').then( m => m.GenerateReportModule), canActivate: [GenerateReportGuard], canActivateChild: [GenerateReportGuard]},\r\n      {path: 'doc/:id', loadChildren: () => import('../xml-viewer/xml-viewer.module').then( m => m.XmlViewerModule)},\r\n      {path: '', loadChildren: () => import('../main/main.module').then( m => m.MainModule),  pathMatch: 'full'},\r\n      // {\r\n      //   path: '',\r\n      //   redirectTo: '/dashboard/generate_report',\r\n      //   pathMatch: 'full'\r\n      // }\r\n    ],\r\n  },\r\n  // {\r\n  //   path: '',\r\n  //   redirectTo: '/dashboard/generate_report',\r\n  //   pathMatch: 'full'\r\n  // }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class DashboardRoutingModule { }\r\n","import { Location } from '@angular/common';\r\nimport { Injectable } from '@angular/core';\r\nimport { CanActivate, CanActivateChild, CanLoad, Route, UrlSegment, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { ReportService } from '../pages/generate-report/report.service';\r\nimport { AuthService } from './auth.service';\r\n\r\n/**\r\n * this guard route that shouldn't be accessed date is not selected\r\n */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GenerateReportGuard implements CanActivate, CanActivateChild, CanLoad {\r\n\r\n  constructor(\r\n    private readonly router: Router,\r\n    private reportService: ReportService,\r\n    private readonly location: Location\r\n  ) {}\r\n\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n      return this.reportService.selectedDate.pipe(map(date => {\r\n        // const navigationId\r\n        const navigationId = (this.location.getState() as any)?.navigationId;\r\n        if(date !== null && date.length > 0) {\r\n          return true;\r\n        } else if( navigationId === null || navigationId === undefined  || navigationId <= 1) {\r\n          this.router.navigate(['/'])\r\n        }\r\n        return false;\r\n      }))\r\n  }\r\n  canActivateChild(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n      return this.canActivate(next, state);\r\n  }\r\n  canLoad(\r\n    route: Route,\r\n    segments: UrlSegment[]): Observable<boolean> | Promise<boolean> | boolean {\r\n      return this.reportService.selectedDate.pipe(map(date => {\r\n        if(date !== null || date.length > 0) {\r\n          return true;\r\n        }\r\n        return false;\r\n      }))\r\n  }\r\n}"]}