{"version":3,"sources":["./src/app/pages/login/login.module.ts","./src/app/pages/login/login-routing.module.ts","./src/app/pages/login/login.page.ts","./src/app/pages/login/login.page.html"],"names":[],"mappings":"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","file":"pages-login-login-module-es2015.js","sourcesContent":["import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\n\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { LoginRoutingModule } from './login-routing.module';\r\nimport { LoginPage } from './login.page';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@NgModule({\r\n  declarations: [LoginPage],\r\n  imports: [\r\n    CommonModule,\r\n    LoginRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule\r\n\r\n  ]\r\n})\r\nexport class LoginModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoginPage } from './login.page';\r\n\r\n\r\nconst routes: Routes = [\r\n\r\n  {path:'', component: LoginPage},\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class LoginRoutingModule { }\r\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { AuthService } from 'src/app/common/auth.service';\r\nimport { ValidationError } from 'src/app/data/validation-error';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.page.html',\r\n  styleUrls: ['./login.page.css'],\r\n})\r\n// tslint:disable-next-line: component-class-suffix\r\nexport class LoginPage implements OnInit {\r\n\r\n  loginForm: FormGroup;\r\n  isLoading = false;\r\n  isError = false;\r\n  errorMessage = '';\r\n\r\n  year: number = new Date().getFullYear();\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private authService: AuthService) { }\r\n\r\n  // tslint:disable-next-line: typedef\r\n  ngOnInit() {\r\n    this.loginForm = new FormGroup({\r\n      username: new FormControl(null, [Validators.required]),\r\n      password: new FormControl(null, [Validators.required]),\r\n    });\r\n  }\r\n\r\n  // tslint:disable-next-line: typedef\r\n  onLogin(){\r\n    if (this.loginForm.valid) {\r\n      this.isLoading = true;\r\n      this.isError = false;\r\n      this.authService.login({password: this.password.value, username: this.username.value}).subscribe((res) => {\r\n        this.isLoading = false;\r\n        this.router.navigate(['/', 'dashboard']);\r\n      }, err => {\r\n        this.isLoading = false;\r\n        this.isError = true;\r\n        if (err.status === 0) {\r\n\r\n          this.errorMessage = 'An unknown Error occurred';\r\n        } else if (err.status === 400) {\r\n          const serverMessage = err.error as ValidationError;\r\n          this.errorMessage = `${serverMessage.message}\\n${serverMessage?.details}` ;\r\n        } else {\r\n          const serverMessage = err.error;\r\n          if (serverMessage?.message instanceof Array) {\r\n            this.errorMessage = serverMessage.message.join('<br>');\r\n          } else {\r\n            this.errorMessage = serverMessage.message;\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  // tslint:disable-next-line: typedef\r\n  get username() {\r\n    return this.loginForm.get('username');\r\n  }\r\n\r\n  // tslint:disable-next-line: typedef\r\n  get password() {\r\n    return this.loginForm.get('password');\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n","<!-- <div class=\"login-container\">\r\n    <div >\r\n        \r\n        <div >\r\n            <form class=\"form_common f\" [formGroup]=\"loginForm\" (ngSubmit)=\"onLogin()\">\r\n                <img alt=\"\" src=\"./assets/img/Neptune.png\" width=\"75%\" >\r\n                <img alt=\"\" src=\"../../../assets/img/download-removebg-preview.png\" width=\"75%\" >\r\n                <br>\r\n                <br>\r\n                <br>\r\n                <div class=\"error\" *ngIf=\"isError\">\r\n                    <p>{{errorMessage}}</p>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <input type=\"text\" autocomplete=\"username\" required class=\"form-control input-lg input_common \" placeholder=\"Username\" formControlName=\"username\" id=\"username\" >\r\n                </div>\r\n\r\n                <br>\r\n\r\n                <div class=\"form-group\">\r\n                    <input type=\"password\" autocomplete=\"current-password\" required class=\"form-control input-lg input_common\" placeholder=\"Password\" formControlName=\"password\" id=\"password\">\r\n                </div>\r\n\r\n                <br>\r\n\r\n                <div class=\"text-center\">\r\n                    <button type=\"submit\" class=\"btn btn-lg btn-primary btn-block btn_common\" [disabled]=\"!loginForm.valid || isLoading\">\r\n                        <div class=\"loadingSpinner\" *ngIf=\"isLoading\"></div>\r\n                        <span *ngIf=\"!isLoading\">Login</span>\r\n                    </button>\r\n                </div>\r\n            </form>\r\n\r\n            <div class=\"copyright\">\r\n                {{ year }} &copy; Rubikon-Efass by Neptune Software Group.\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n</div>\r\n -->\r\n<body>\r\n <div class=\"login-container\">\r\n    <div >\r\n        <div >\r\n            <form class=\"form_common f\" [formGroup]=\"loginForm\" (ngSubmit)=\"onLogin()\">\r\n                <!-- <img alt=\"\"  src=\"../../../assets/img/Neptune.png\" width=\"75%\" > -->\r\n                <img alt=\"\"  src=\"../../../assets/img/download-removebg-preview.png\" width=\"75%\" >\r\n\r\n                <br>\r\n                <br>\r\n                <br>\r\n                <div class=\"error\" *ngIf=\"isError\">\r\n                    <p>{{errorMessage}}</p>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <input type=\"text\" autocomplete=\"username\" required class=\"form-control input-lg input_common \" placeholder=\"Username\" formControlName=\"username\" id=\"username\" >\r\n                </div>\r\n\r\n                <br>\r\n\r\n                <div class=\"form-group\">\r\n                    <input type=\"password\" autocomplete=\"current-password\" required class=\"form-control input-lg input_common\" placeholder=\"Password\" formControlName=\"password\" id=\"password\">\r\n                </div>\r\n\r\n                <br>\r\n\r\n                <div class=\"text-center\">\r\n                    <button type=\"submit\" class=\"btn btn-lg btn-primary btn-block btn_common\" [disabled]=\"!loginForm.valid || isLoading\">\r\n                        <div class=\"loadingSpinner\" *ngIf=\"isLoading\"></div>\r\n                        <span *ngIf=\"!isLoading\">Login</span>\r\n                    </button>\r\n                </div>\r\n            </form>\r\n\r\n            <div class=\"copyright\">\r\n                {{ year }} &copy; Efass by Neptune Software Group.\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n</div>\r\n</body>\r\n\r\n\r\n"],"sourceRoot":"webpack:///"}