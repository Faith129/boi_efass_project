{"version":3,"sources":["./src/app/pages/user-settings/create-user/create-user.module.ts","./src/app/pages/user-settings/create-user/create-user.component.ts","./src/app/pages/user-settings/create-user/create-user.component.html"],"names":[],"mappings":"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","file":"create-user-create-user-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { CreateUserComponent } from './create-user.component';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\nconst routes: Routes = [\r\n  {path: '', component: CreateUserComponent}\r\n];\r\n\r\n@NgModule({\r\n  declarations: [CreateUserComponent],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    ReactiveFormsModule\r\n\r\n  ]\r\n})\r\nexport class CreateUserModule { }\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/common/auth.service';\r\nimport { ValidationError } from 'src/app/data/validation-error';\r\nimport swal from 'sweetalert';\r\nimport { UserSettingsService } from '../user-settings.service';\r\n\r\n@Component({\r\n  selector: 'app-create-user',\r\n  templateUrl: './create-user.component.html',\r\n  styleUrls: ['./create-user.component.css']\r\n})\r\nexport class CreateUserComponent implements OnInit, OnDestroy {\r\n\r\n  username: string;\r\n  $user: Subscription;\r\n  timeIntervalId: any;\r\n  nowDate: Date;\r\n\r\n  createUserForm: FormGroup;\r\n  isLoading = false;\r\n\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private userSettingsService: UserSettingsService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.createUserForm = new FormGroup({\r\n      username: new FormControl(null, [Validators.required, Validators.minLength(4)]),\r\n      password: new FormControl(null, [Validators.required, Validators.minLength(6)]),\r\n    });\r\n\r\n    this.timeIntervalId = setInterval(() => {\r\n      this.nowDate = new Date();\r\n    }, 1000);\r\n\r\n    this.$user = this.authService.user.subscribe(user => {\r\n      this.username = user?.username;\r\n    });\r\n  }\r\n\r\n  createUser() {\r\n    if (this.createUserForm.valid) {\r\n      const body = {\r\n        username: this.usernameInput.value,\r\n        password: this.password.value,\r\n        role: 'ADMIN_ROLE'\r\n      };\r\n\r\n      this.isLoading = true;\r\n      this.userSettingsService.createUser(body).subscribe((response) => {\r\n        this.isLoading = false;\r\n        this.createUserForm.reset();\r\n        swal({\r\n          title: 'Successful',\r\n          text: 'Password updated',\r\n          icon: 'success'\r\n        });\r\n      }, (err) => {\r\n        this.isLoading = false;\r\n        this.createUserForm.reset({username: body.username});\r\n        let errorMessage = 'An unknown Error occurred';\r\n        if (err.status === 0) {\r\n          errorMessage = 'An unknown Error occurred';\r\n        } else if (err.status === 400) {\r\n          const serverMessage = err.error as ValidationError;\r\n          errorMessage = `${serverMessage.message}\\n${serverMessage?.details}` ;\r\n        } else {\r\n          const serverMessage = err.error;\r\n          if (serverMessage?.message instanceof Array) {\r\n            errorMessage = serverMessage.message.join('<br>');\r\n          } else {\r\n            errorMessage = serverMessage?.message || errorMessage;\r\n          }\r\n        }\r\n        swal({\r\n          title: 'Error',\r\n          text: errorMessage,\r\n          icon: 'error'\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  get usernameInput() {\r\n    return this.createUserForm.get('username');\r\n  }\r\n\r\n  get password() {\r\n    return this.createUserForm.get('password');\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    clearInterval(this.timeIntervalId);\r\n\r\n    if (this.$user) {\r\n      this.$user.unsubscribe();\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"page-header\" style=\"padding: 20px 20px;\">\r\n    <h1>\r\n      Settings <small>Create &amp; user </small>\r\n    </h1>\r\n  </div>\r\n  \r\n\r\n  <div class=\"container\">\r\n\r\n  <div class=\"panel panel-default\">\r\n    <div class=\"panel-heading\">\r\n    <i class=\"fa fa-external-link-square\"></i>Profile\r\n    \r\n    </div>\r\n    <div class=\"panel-body\">\r\n    <div class=\"col-sm-9\">\r\n    <b style=\"color: gray; font-size: 15px;\">\r\n    USERNAME: </b> <b style=\"color: gray; font-size: 15px;\">{{username | titlecase}}</b>\r\n    \r\n    <div class=\"form-group\">\r\n    <b style=\"color: gray; font-size: 15px;\">\r\n    DATE: </b> <b>{{nowDate | date:'medium'}}</b>\r\n    </div>\r\n    </div>\r\n    <br>\r\n    \r\n    <!-- end: PAGE TITLE & BREADCRUMB -->\r\n    </div>\r\n    </div>\r\n\r\n          \r\n  </div>\r\n\r\n  \r\n<div class=\"container\">\r\n    <div class=\"row\">\r\n        <div class=\"col-12 col-sm-6\">\r\n        <!-- start: TEXT FIELDS PANEL -->\r\n        <div class=\"panel panel-default\">\r\n        <div class=\"panel-heading\">\r\n        <i class=\"fa fa-external-link-square\"></i>Password Informatiom\r\n        \r\n        </div>\r\n        <div class=\"panel-body\">\r\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        <form role=\"form\" class=\"form-horizontal\" [formGroup]=\"createUserForm\" (ngSubmit)=\"createUser()\">\r\n        \r\n        <div class=\"form-group\">\r\n        <label class=\"col-sm-2 control-label\" for=\"form-field-2\">\r\n         Username </label>\r\n            <div class=\"col-sm-9\">\r\n                <input type=\"text\" placeholder=\"Username\" id=\"form-field-2\" class=\"form-control\" \r\n                    formControlName=\"username\"\r\n                >\r\n                <span class=\"error\" *ngIf=\"usernameInput.touched && usernameInput.hasError('required')\"> Username required</span>\r\n                <span class=\"error\" *ngIf=\"usernameInput.touched && usernameInput.hasError('minlength')\"> Enter minimum of 4 characters</span>\r\n            </div>\r\n        </div>\r\n        \r\n        <div class=\"form-group\">\r\n        <label class=\"col-sm-2 control-label\" for=\"form-field-2\">\r\n        Password </label>\r\n        <div class=\"col-sm-9\">\r\n        <input type=\"password\" placeholder=\"Password\" id=\"form-field-2\" class=\"form-control\" \r\n            formControlName=\"password\" autocomplete=\"new-password\"\r\n        >\r\n        <span class=\"error\" *ngIf=\"password.touched && password.hasError('required')\"> Password is required</span>\r\n        <span class=\"error\" *ngIf=\"password.touched && password.hasError('minlength')\"> Enter minimum of 6 characters</span>\r\n        </div>\r\n        </div>\r\n        \r\n        <br> <br>\r\n        \r\n        \r\n        \r\n        <div class=\"form-group\">\r\n        <label class=\"col-sm-2 control-label\" for=\"form-field-2\">\r\n        \r\n        </label>\r\n        <div class=\"col-sm-9\">\r\n        <button class=\"btn btn-primary btn-block\" type=\"submit\" [disabled]=\"isLoading || createUserForm.invalid\">\r\n        <div class=\"loadingSpinner\" *ngIf=\"isLoading\"></div>\r\n        <span *ngIf=\"!isLoading\">Save</span>\r\n        </button>\r\n        </div>\r\n        </div>\r\n        </form>\r\n        </div>\r\n        </div>\r\n        \r\n        \r\n        \r\n        </div>\r\n        \r\n        \r\n        \r\n        \r\n        <!-- end: PAGE TITLE & BREADCRUMB -->\r\n    </div>\r\n</div>\r\n"],"sourceRoot":"webpack:///"}